[build]
  command = "npm ci && npm run build"
  publish = "dist/public"

[build.environment]
  NODE_VERSION = "20"
  NPM_CONFIG_FUND = "false"
  NPM_CONFIG_AUDIT = "false"
  DISABLE_OPENCOLLECTIVE = "true"
  SECRETS_SCAN_ENABLED = "false"
  # Optimize build performance
  NODE_OPTIONS = "--max-old-space-size=2048"
  NETLIFY_USE_YARN = "false"

# Health check endpoint
[[redirects]]
  from = "/api/health"
  to = "/.netlify/functions/health"
  status = 200
  # Cache health checks to reduce function invocations
  headers = {Cache-Control = "public, max-age=60, s-maxage=60"}

[[redirects]]
  from = "/api/create-superadmin"
  to = "/.netlify/functions/create-superadmin"
  status = 200

[[redirects]]
  from = "/api/debug-orders"
  to = "/.netlify/functions/debug-orders"
  status = 200

[[redirects]]
  from = "/api/fix-order-associations"
  to = "/.netlify/functions/fix-order-associations"
  status = 200

[[redirects]]
  from = "/api/orders"
  to = "/.netlify/functions/orders"
  status = 200

[[redirects]]
  from = "/api/orders/:id"
  to = "/.netlify/functions/orders/[id]"
  status = 200

[[redirects]]
  from = "/api/kitchen/orders"
  to = "/.netlify/functions/kitchen-orders"
  status = 200

[[redirects]]
  from = "/api/orders/*/status"
  to = "/.netlify/functions/orders-status"
  status = 200

[[redirects]]
  from = "/api/tax-settings"
  to = "/.netlify/functions/tax-settings"
  status = 200

[[redirects]]
  from = "/api/tax-categories"
  to = "/.netlify/functions/tax-categories"
  status = 200

[[redirects]]
  from = "/api/pause-services"
  to = "/.netlify/functions/pause-services"
  status = 200

[[redirects]]
  from = "/api/store-hours"
  to = "/.netlify/functions/store-hours"
  status = 200

[[redirects]]
  from = "/api/store-hours/*"
  to = "/.netlify/functions/store-hours"
  status = 200

[[redirects]]
  from = "/api/auth/google/callback"
  to = "/.netlify/functions/auth-google-callback"
  status = 200

[[redirects]]
  from = "/api/auth/google"
  to = "/.netlify/functions/auth-google"
  status = 200

[[redirects]]
  from = "/api/user/profile"
  to = "/.netlify/functions/user-profile"
  status = 200

[[redirects]]
  from = "/api/user/rewards"
  to = "/.netlify/functions/user-rewards"
  status = 200

[[redirects]]
  from = "/api/user/redemptions"
  to = "/.netlify/functions/user-redemptions"
  status = 200

[[redirects]]
  from = "/api/rewards/*/redeem"
  to = "/.netlify/functions/rewards-redeem"
  status = 200

[[redirects]]
  from = "/api/user/vouchers"
  to = "/.netlify/functions/user-vouchers"
  status = 200

[[redirects]]
  from = "/api/vouchers/validate"
  to = "/.netlify/functions/vouchers/validate"
  status = 200

[[redirects]]
  from = "/api/debug-user"
  to = "/.netlify/functions/debug-user"
  status = 200

[[redirects]]
  from = "/api/fix-user-link"
  to = "/.netlify/functions/fix-user-link"
  status = 200

[[redirects]]
  from = "/api/test-auth"
  to = "/.netlify/functions/test-auth"
  status = 200

[[redirects]]
  from = "/api/emergency-fix"
  to = "/.netlify/functions/emergency-fix"
  status = 200

[[redirects]]
  from = "/api/fix-user-migration"
  to = "/.netlify/functions/fix-user-migration"
  status = 200

[[redirects]]
  from = "/api/restore-user-points"
  to = "/.netlify/functions/restore-user-points"
  status = 200

[[redirects]]
  from = "/api/debug-user-orders"
  to = "/.netlify/functions/debug-user-orders"
  status = 200

[[redirects]]
  from = "/api/recover-user-orders"
  to = "/.netlify/functions/recover-user-orders"
  status = 200

[[redirects]]
  from = "/api/debug-orders-schema"
  to = "/.netlify/functions/debug-orders-schema"
  status = 200

[[redirects]]
  from = "/api/redeem-no-auth"
  to = "/.netlify/functions/redeem-no-auth"
  status = 200

[[redirects]]
  from = "/api/run-voucher-migration"
  to = "/.netlify/functions/run-voucher-migration"
  status = 200

[[redirects]]
  from = "/api/debug-vouchers"
  to = "/.netlify/functions/debug-vouchers"
  status = 200

[[redirects]]
  from = "/api/user/active-vouchers"
  to = "/.netlify/functions/user-active-vouchers"
  status = 200

[[redirects]]
  from = "/api/debug-auth"
  to = "/.netlify/functions/debug-auth"
  status = 200

[[redirects]]
  from = "/api/test-auth-simple"
  to = "/.netlify/functions/test-auth-simple"
  status = 200

[[redirects]]
  from = "/api/debug-token-simple"
  to = "/.netlify/functions/debug-token-simple"
  status = 200

# Image upload endpoint
[[redirects]]
  from = "/api/image-upload-test"
  to = "/.netlify/functions/image-upload-test"
  status = 200

# Storage setup endpoint
[[redirects]]
  from = "/api/setup-storage"
  to = "/.netlify/functions/setup-storage"
  status = 200

# Menu endpoints (cacheable for GET requests)
[[redirects]]
  from = "/api/menu-items"
  to = "/.netlify/functions/menu-items"
  status = 200
  # Cache menu items for 5 minutes
  headers = {Cache-Control = "public, max-age=300, s-maxage=300, stale-while-revalidate=60"}

[[redirects]]
  from = "/api/menu-items/*"
  to = "/.netlify/functions/menu-items"
  status = 200
  headers = {Cache-Control = "public, max-age=300, s-maxage=300, stale-while-revalidate=60"}

[[redirects]]
  from = "/api/menu/:id"
  to = "/.netlify/functions/menu-item"
  status = 200

# Categories endpoint (cacheable)
[[redirects]]
  from = "/api/categories"
  to = "/.netlify/functions/categories"
  status = 200
  headers = {Cache-Control = "public, max-age=300, s-maxage=300, stale-while-revalidate=60"}

[[redirects]]
  from = "/api/categories/*"
  to = "/.netlify/functions/categories"
  status = 200

# Rewards endpoints (cacheable for GET)
[[redirects]]
  from = "/api/rewards"
  to = "/.netlify/functions/rewards"
  status = 200
  headers = {Cache-Control = "public, max-age=300, s-maxage=300, stale-while-revalidate=60"}

# Catch-all API redirect (must be before SPA fallback)
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200
  force = false

# Static assets with long cache
[[redirects]]
  from = "/assets/*"
  to = "/assets/:splat"
  status = 200
  headers = {Cache-Control = "public, max-age=31536000, immutable"}

[[redirects]]
  from = "/*.js"
  to = "/:splat.js"
  status = 200
  headers = {Cache-Control = "public, max-age=31536000, immutable"}

[[redirects]]
  from = "/*.css"
  to = "/:splat.css"
  status = 200
  headers = {Cache-Control = "public, max-age=31536000, immutable"}

# SPA fallback - must be last and only for HTML requests
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  # Don't force this redirect, allow other rules to match first
  force = false

[functions]
  directory = "api"
  node_bundler = "esbuild"
  # Include source maps for better debugging
  included_files = ["**/*.map"]

# Function-specific configurations for optimization
[functions."health"]
  # Health check should be fast
  timeout = 3
  memory = 128

[functions."menu-items"]
  # Menu items can use more memory for caching
  memory = 256
  timeout = 8

[functions."categories"]
  # Categories are lightweight
  memory = 256
  timeout = 8

[functions."rewards"]
  # Rewards queries are simple
  memory = 256
  timeout = 8

[functions."user-rewards"]
  # User-specific queries need more resources
  memory = 512
  timeout = 10

[functions."orders"]
  # Order processing needs more resources
  memory = 512
  timeout = 15

[functions."kitchen-orders"]
  # Kitchen orders may have complex queries
  memory = 512
  timeout = 12

[functions."auth-google"]
  # OAuth needs time for external calls
  memory = 256
  timeout = 15

[functions."auth-google-callback"]
  # OAuth callback processing
  memory = 256
  timeout = 15

# Heavy/debug functions get more resources
[functions."debug-orders"]
  memory = 512
  timeout = 20

[functions."fix-order-associations"]
  memory = 512
  timeout = 20

[functions."recover-user-orders"]
  memory = 512
  timeout = 20

[functions."image-upload-test"]
  # Image upload needs more memory and time for processing
  memory = 512
  timeout = 30

[dev]
  command = "npm run dev:client"
  port = 8888
  targetPort = 5173
  publish = "dist/public"
  functionsPort = 8889
